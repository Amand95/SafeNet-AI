import requests
import pandas as pd
import os

# URL do arquivo Excel (exemplo, ajuste para o arquivo correto do mês desejado)
XLSX_URL = 'https://github.com/Amand95/SafeNet-AI/raw/main/coleta_dados/cemaden/tabelas_extraidas/Monitoramento_Seca_Abril_2025.xlsx'
XLSX_FILE = 'Monitoramento_Seca_Abril_2025.xlsx'
PASTA_CSV = 'tabelas_extraidas/'

def baixar_xlsx(url: str, nome_arquivo: str):
    try:
        response = requests.get(url)
        response.raise_for_status()
        with open(nome_arquivo, 'wb') as f:
            f.write(response.content)
        print("✅ XLSX baixado com sucesso!")
    except Exception as e:
        print(f"❌ Erro ao baixar XLSX: {e}")

def extrair_tabelas_xlsx(nome_arquivo: str):
    try:
        # Lê todas as planilhas do arquivo Excel em um dicionário {nome_planilha: DataFrame}
        xls = pd.ExcelFile(nome_arquivo)
        tabelas = {}
        for sheet_name in xls.sheet_names:
            df = pd.read_excel(xls, sheet_name=sheet_name)
            tabelas[sheet_name] = df
        return tabelas
    except Exception as e:
        print(f"❌ Erro ao extrair tabelas do XLSX: {e}")
        return None

def salvar_tabelas_csv(tabelas: dict):
    if tabelas:
        if not os.path.exists(PASTA_CSV):
            os.makedirs(PASTA_CSV)
        for nome, df in tabelas.items():
            nome_arquivo_csv = os.path.join(PASTA_CSV, f'{nome}.csv')
            df.to_csv(nome_arquivo_csv, index=False)
            print(f"✅ Tabela '{nome}' salva como '{nome_arquivo_csv}'.")
    else:
        print("⚠️ Nenhuma tabela encontrada para salvar.")

def main():
    baixar_xlsx(XLSX_URL, XLSX_FILE)
    tabelas = extrair_tabelas_xlsx(XLSX_FILE)
    salvar_tabelas_csv(tabelas)

if __name__ == "__main__":
    main()



